spring:
  application:
    name: notification-service
  jpa:
    hibernate:
      ddl-auto: update
  sql:
    init:
      mode: always
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9094}
    consumer:
      group-id: ${SPRING_KAFKA_CONSUMER_GROUP_ID:notification-service}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: dev.nelson.asteroid.alerting.event
        # Additional consumer properties
        max.poll.records: 100
        fetch.min.bytes: 1
        fetch.max.wait.ms: 500
        heartbeat.interval.ms: 3000
        session.timeout.ms: 10000
  mail:
    host: ${SPRING_MAIL_HOST:localhost}
    port: ${SPRING_MAIL_PORT:1025}
    username: ${SPRING_MAIL_USERNAME:john.doe@email.com}
    password: ${SPRING_MAIL_PASSWORD:secret}
    properties:
      mail:
        smtp:
          auth: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:false}
          starttls:
            enable: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:false}
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

server:
  port: 8081

application:
  email:
    from: ${SPRING_MAIL_USERNAME:john.doe@email.com}
